{"version":3,"sources":["utils/API.js","components/ResultChart.js","components/SortButtons.js","components/CallResults.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["apiCall","search","axios","get","ResultChart","props","className","scope","results","map","result","id","value","name","first","last","dob","date","slice","email","phone","cell","SearchForm","onClick","sortById","sortByName","CallResults","state","fillEmployees","API","then","res","console","log","data","setState","catch","err","event","preventDefault","employees","sort","a","b","parseInt","fa","toLowerCase","fb","filter","this","SortButtons","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da1b3032.chunk.js","sourcesContent":["import axios from \"axios\";  \n\nconst apiCall = {\n  search: function() {\n    return axios.get(\"https://randomuser.me/api/?results=10&nat=us\") \n  }\n};\n\nexport default apiCall\n\n","import React from \"react\";\n\nfunction ResultChart(props) {\n  return (\n    <div className=\"container\">\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">First</th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">Birthday</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone Number</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.results.map(result => (\n            <tr key={result.id.value}>\n              <th scope=\"row\">{result.id.value}</th>\n              <td>{result.name.first}</td>\n              <td>{result.name.last}</td>\n              <td>{result.dob.date.slice(5, 10)}</td>\n              <td>{result.email}</td>\n              <td>Office: {result.phone}, Cell: {result.cell}</td>\n            </tr>\n          ))}\n\n        </tbody>\n      </table>\n    </div>\n  );\n\n}\n\nexport default ResultChart;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"form-group\">\n          <button onClick={props.sortById} className=\"btn btn-primary m-3\">\n            Sort by ID\n        </button>\n          <button onClick={props.sortByName} className=\"btn btn-primary m-3\">\n            Sort by Last Name\n        </button>\n        </div>\n      </form>\n\n    </div>\n  );\n}\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport ResultChart from \"./ResultChart\";\nimport SortButtons from \"./SortButtons\";\n\n\nclass CallResults extends Component {\n  state = {\n    results: [],\n  };\n\n  componentDidMount() {\n    this.fillEmployees();\n  }\n\n  fillEmployees = () => {\n    API.search()\n      .then(res => {\n        console.log(res.data.results)\n        this.setState({ results: res.data.results });\n      })\n      .catch(err => console.log(err));\n\n  };\n\n  sortById = (event) => {\n    event.preventDefault();\n    let employees = this.state.results;\n    employees.sort((a, b) => {\n      return parseInt(a.id.value) - parseInt(b.id.value);\n    });\n    this.setState({ results: employees });\n    console.log(this.state.results);\n  }\n\n\n  sortByName = (event) => {\n    event.preventDefault();\n    let employees = this.state.results;\n    employees.sort((a, b) => {\n      let fa = a.name.last.toLowerCase(),\n        fb = b.name.last.toLowerCase();\n      if (fa < fb) {\n        return -1;\n      }\n      if (fa > fb) {\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({ results: employees });\n    console.log(this.state.results);\n  }\n\n  filter = (event) => {\n    event.preventDefault();\n    let employees = this.state.results;\n    employees.sort((a, b) => {\n      let fa = a.name.last.toLowerCase(),\n        fb = b.name.last.toLowerCase();\n      if (fa < fb) {\n        return -1;\n      }\n      if (fa > fb) {\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({ results: employees });\n    console.log(this.state.results);\n  }\n\n\n  render() {\n    return (\n      <div>\n        <ResultChart results={this.state.results} />\n        <SortButtons sortById={this.sortById} sortByName={this.sortByName} />\n      </div>\n    );\n  }\n\n}\n\nexport default CallResults;\n","import React from \"react\";\n\nfunction Header() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1>Employee Coordinator</h1>\n          <p>Coworker Info at a Glance</p>\n        </div>\n      </div>\n    );\n\n}\n\nexport default Header;\n","import React from \"react\";\nimport CallResults from \"./components/CallResults\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <CallResults />;\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}